{"version":3,"file":"static/js/255.6865b478.chunk.js","mappings":"oSAEaA,EAAYC,EAAAA,GAAAA,GAAH,2CACP,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,UAAUC,CAAtB,IAGHC,EAAWL,EAAAA,GAAAA,EAAH,2CACN,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,UAAUG,CAAtB,IAGHC,EAAWP,EAAAA,GAAAA,GAAH,wF,SCRRQ,EAAwBR,EAAAA,GAAAA,IAAH,8KAIvB,SAAAC,GAAC,OAAIA,EAAEC,MAAMO,MAAMC,mBAAlB,IACA,SAAAT,GAAC,OAAIA,EAAEC,MAAMO,MAAME,mBAAlB,IACS,SAAAV,GAAC,OAAIA,EAAEC,MAAMU,OAAOC,KAAnB,IACJ,SAAAZ,GAAC,OAAIA,EAAEC,MAAMY,MAAMC,MAAlB,IAGPC,EAAOhB,EAAAA,GAAAA,EAAH,+C,SCVJiB,EAAmB,WAC9B,OACE,SAACT,EAAD,WACE,SAACQ,EAAD,+CAGL,ECoDD,EAhDa,WACX,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,6GAEuBC,EAAAA,EAAAA,gBAAoBN,GAF3C,OAEUO,EAFV,OAIIH,EAAaG,GAJjB,gDAMIC,EAAAA,GAAAA,MAAY,uCANhB,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,CAACT,IAEc,OAAdG,EACK,MAIP,UAACO,EAAA,EAAD,CAAKC,GAAG,KAAKC,QAAQ,OAAOC,SAAS,OAAOC,QAAQ,OAApD,UACGX,EAAUI,KAAKQ,KAAI,YAAwC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACtC,OACE,UAAC7B,EAAD,WACG6B,GACC,gBACEC,IAAG,UA/BF,+BA+BE,OA9BF,QA8BE,OAA2BD,GAC9BE,MAAM,OACNC,IAAI,WAGN,SAACtB,EAAD,KAGF,SAAClB,EAAD,UAAYmC,KACZ,UAAC7B,EAAD,YACE,sCADF,IACqB8B,OAbRD,EAiBlB,IApBH,MAwBH,C","sources":["components/Cast/Cast.styled.js","components/Placeholders/PhotoActorPlaceholder/PhotoActorPlaceholder.styled.js","components/Placeholders/PhotoActorPlaceholder/PhotoActorPlaceholder.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastTitle = styled.h3`\n  font-size: ${p => p.theme.fontSizes.m};\n`;\n\nexport const CastText = styled.p`\n  font-size: ${p => p.theme.fontSizes.s};\n`;\n\nexport const CastCard = styled.li`\n  display: flex;\n  flex-direction: column;\n\n  width: 150px;\n`;\n","import styled from 'styled-components';\n\nexport const PhotoActorPlaceholder = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: ${p => p.theme.sizes.photo_placeholder_w};\n  height: ${p => p.theme.sizes.photo_placeholder_h};\n  background-color: ${p => p.theme.colors.muted};\n  border-radius: ${p => p.theme.radii.poster};\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n`;\n","import { PhotoActorPlaceholder, Text } from './PhotoActorPlaceholder.styled';\n\nexport const PhotoPlaceholder = () => {\n  return (\n    <PhotoActorPlaceholder>\n      <Text>Here should be an actor's photo</Text>\n    </PhotoActorPlaceholder>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport API from '../services/fetchFilms';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { CastTitle, CastText, CastCard } from './Cast.styled';\nimport Box from '../Box';\nimport { PhotoPlaceholder } from '../Placeholders/PhotoActorPlaceholder/PhotoActorPlaceholder';\n\nconst BASE_URL = 'https://image.tmdb.org/t/p/';\nconst IMG_SIZE = 'w500';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actorList, setActorList] = useState(null);\n\n  useEffect(() => {\n    async function getCast() {\n      try {\n        const cast = await API.getMovieCredits(movieId);\n\n        setActorList(cast);\n      } catch (error) {\n        toast.error('Something went wrong :(. Try again.');\n      }\n    }\n    getCast();\n  }, [movieId]);\n\n  if (actorList === null) {\n    return null;\n  }\n\n  return (\n    <Box as=\"ul\" display=\"flex\" flexWrap=\"wrap\" gridGap=\"50px\">\n      {actorList.cast.map(({ name, character, profile_path }) => {\n        return (\n          <CastCard key={name}>\n            {profile_path ? (\n              <img\n                src={`${BASE_URL}${IMG_SIZE}${profile_path}`}\n                width=\"100%\"\n                alt=\"actor\"\n              />\n            ) : (\n              <PhotoPlaceholder />\n            )}\n\n            <CastTitle>{name}</CastTitle>\n            <CastText>\n              <i>Character:</i> {character}\n            </CastText>\n          </CastCard>\n        );\n      })}\n      ;\n    </Box>\n  );\n};\n\nexport default Cast;\n"],"names":["CastTitle","styled","p","theme","fontSizes","m","CastText","s","CastCard","PhotoActorPlaceholder","sizes","photo_placeholder_w","photo_placeholder_h","colors","muted","radii","poster","Text","PhotoPlaceholder","movieId","useParams","useState","actorList","setActorList","useEffect","API","cast","toast","getCast","Box","as","display","flexWrap","gridGap","map","name","character","profile_path","src","width","alt"],"sourceRoot":""}